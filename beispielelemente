.ToString-Erklärung = https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings

Toolbox anzeigen = ctrl + alt + x

Bedingungsübungen

Zahlenformate

Double = Zahl, Komastellen sind erlaubt (1, 2.3,5.6,8 etc.)
Int16= Zahl,  Kommastellen sind nicht erlaubt (1,2,3,4 etc.)

Beispiel
	double  Variabel1;
            Int16 Variabel2;
            Int16 Variabel3;
            Int16 Variabel4;

            Variabel1 = Convert.ToDouble(this.Feld1.Text);
            Variabel2 = Convert.ToInt16(this.Feld2.Text);
            Variabel3 = Convert.ToInt16(this.Feld3.Text);
            Variabel4 = Convert.ToInt16(this.Feld4.Text);

If, else if, else 

if (Variabel == Variabel && Variabel == Variabel)
            {
                this.Textfeld.Text = "Ihr Ergebnis: " + Convert.ToDouble(Variabel * 5);
            }
            else if (Variabel - Variabel == Variabel - Variabel)
            {
                this.Textfeld.Text = "Ihr Ergebnis: " + Convert.ToDouble(Variabel * 3);
            }
            else
            {
                this.Textfeld.Text = "Leider nichts gewonnen";
            }


Zahlenformate

Double = Zahl, Komastellen sind erlaubt
Int16= Zahl,  Kommastellen nicht erlaubt

Einfacher Rechner Beispiel

	 double  dblVariabel1;
            double dblVariabel2;
            double  dblResultat;

            Variabel1 = Convert.ToDouble(this.txtFeld1.Text);
            Variabel2 = Convert.ToInt16(this.txtFeld2.Text);

	dblResultat = dblVariabel1 + dblVariabel2;

	This.lblAusgabe.Text = convert.ToString(dblResultat)
	
Bedingungen Beispiel (if, Switch)

	Private void btnAuswerten_Click(abject sender, EventArgs e)
	{
		Int16 intEingabe = 0;
		
		If (int16.Tryparse(txtEingabe.Text, out intEingabe) == false)
		{
			Return;
		}
		
		If (intEingabe > 0 && intEingabe <= 10)
		{
			lblAusgabe.Text = "Diese Zahl ist zwischen 0 und 10";
		}
		
		If (intEingabe > 10 && intEingabe <= 20)
		{
			lblAusgabe.Text = "Diese Zahl ist zwischen 10 und 20";
		}
		
		If (intEingabe > 0 || intEingabe >= 20)
		{
			lblAusgabe.Text = "Diese Zahl ist nicht zwischen 0 und 20";
		}
		
		Switch intEingabe
		{
			Case 1:
				lblAusgabe.Text = "Sie sind sehr gut"
				Break;
			Case 2:
				lblAusgabe.Text = "Sie sind gut"
				Break;
			Case 3:
				lblAusgabe.Text = "Sie sind nicht auf der Skala"
				Break;
			Case default:
				lblAusgabe.Text = "Das gibt es nicht"
				Break;
		}
	}
	
Schlaufen Beispiel (For, While, Do)

	Private void cmdAuswerten_Click(abject sender, EventArgs e)
	{
		In16 intEingabe = 0;
		
		If (int16.TryParse(txtEingabe.Text, out intEingabe) == false)
		{
			txtAusgabe.Text = "Falsche Eingabe";
			txtEingabe.Text = "";
			txtEingabe.Focus();
			Return;
		}
		
		For (int i=0, i<= intEingabe; i++)
		{
			txtAusgabe.Text = txtAusgabe.Text + ï + "\r\n";
		}
		
		Int i = 0
		While (i <= intEingabe)
		{
			i++;
			txtAusgabe.Text = txtAusgabe.Text +  ï + "\r\n";
		}
		
		Int i = 0;
		Do
		{
			i++;
			txtAusgabe.Text = txtAusgabe.Text + ï + "\r\n";
		}  while (i < intEingabe)
	}


Funktionen

Erstelle ein neues Element namens "clsRechnen"

	Class clsRechnen
	{
		Public double fctRechnen(double dblEingabe, string str0p, double dblEingabe2)
		{
			Double dblResultat = 0;
			
			Switch (str0p)
			{
				Case "+":
					dblResultat = dbl Eingabe1 + dblEingabe2
					Break;
				Case "-":
					dblResultat = dbl Eingabe1 - dblEingabe2
					Break;
				Case "*":
					dblResultat = dbl Eingabe1 * dblEingabe2
					Break;
				Case "/":
					dblResultat = dbl Eingabe1 / dblEingabe2
					Break;
			}
			
			Return dblResultat;
		}
	
	}
	
	
	frmFunktionen.cs
	
	Private void cmdRechnen_Click(abject sender, EventArgs e)
	{
		clsRechnen fctCalc = new clsRechnen();
		This.lblAusgabe.Text = convert.ToString(fctCalc.fctRechnen(convert.ToDouble(this.txtEingabe1.Text), this.txt0p.Text,convert.ToDouble(this.txtEingabe2.Text));
	
	}
